name: Unity Build And Test
on:
  schedule:
    - cron: '0 0 * * 0' # Every Sunday at midnight
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - '*'
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ (github.event_name == 'pull_request' || github.event.action == 'synchronize') }}
jobs:
  build:
    name: ${{ matrix.unity-versions }} ${{ matrix.build-target }} ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-15]
        unity-versions: [2021.x, 2022.x, 6000.x]
        include:
          - os: windows-latest
            build-target: StandaloneWindows64
          - os: macos-15
            build-target: StandaloneOSX
          - os: ubuntu-latest
            unity-versions: 2021.x
            build-target: StandaloneLinux64
          - os: ubuntu-latest
            unity-versions: 2021.x
            build-target: StandaloneLinux64
          - os: ubuntu-latest
            unity-versions: 6000.x
            build-target: StandaloneLinux64
          - os: ubuntu-latest
            unity-versions: 2021.x
            build-target: WebGL
          - os: ubuntu-latest
            unity-versions: 2022.x
            build-target: WebGL
          - os: ubuntu-latest
            unity-versions: 6000.x
            build-target: WebGL
    steps:
      - uses: actions/checkout@v4
      - uses: RageAgainstThePixel/unity-setup@v1
        with:
          unity-version: ${{ matrix.unity-versions }}
          build-targets: ${{ matrix.build-target }}
      - uses: RageAgainstThePixel/activate-unity-license@v1
        with:
          license: 'Personal'
          username: ${{ secrets.UNITY_USERNAME }}
          password: ${{ secrets.UNITY_PASSWORD }}
      - uses: RageAgainstThePixel/unity-action@v1
        name: '${{ matrix.build-target }}-Validate'
        with:
          log-name: '${{ matrix.build-target }}-Validate'
          build-target: ${{ matrix.build-target }}
          args: '-quit -nographics -batchmode -executeMethod Utilities.Editor.BuildPipeline.UnityPlayerBuildTools.ValidateProject -importTMProEssentialsAsset'
      - uses: RageAgainstThePixel/unity-action@v1
        name: '${{ matrix.build-target }}-Test'
        with:
          log-name: '${{ matrix.build-target }}-Test'
          build-target: ${{ matrix.build-target }}
          args: '-nographics -batchmode -runTests -testPlatform EditMode -testResults "${{ github.workspace }}/Logs/${{ matrix.build-target }}-results.xml"'
      - uses: RageAgainstThePixel/unity-action@v1
        name: '${{ matrix.build-target }}-Build'
        with:
          log-name: '${{ matrix.build-target }}-Build'
          build-target: ${{ matrix.build-target }}
          args: '-quit -nographics -batchmode -executeMethod Utilities.Editor.BuildPipeline.UnityPlayerBuildTools.StartCommandLineBuild'
      - uses: actions/upload-artifact@v4
        if: success() || failure()
        with:
          compression-level: 0
          retention-days: 1
          name: '${{ github.run_number }}.${{ github.run_attempt }}-${{ matrix.os }}-${{ matrix.unity-versions }}-${{ matrix.build-target }}-Artifacts'
          path: |
            ${{ github.workspace }}/**/*.log
            ${{ github.workspace }}/**/*.xml
